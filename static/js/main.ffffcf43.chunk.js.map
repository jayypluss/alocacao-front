{"version":3,"sources":["pages/Landing/index.tsx","components/PageHeader/index.tsx","components/ContainerItem/index.tsx","components/GrupoCaixasItem/index.tsx","services/api.ts","pages/Alocar/index.tsx","components/CaixaItem/index.tsx","pages/AlocarResultado/index.tsx","components/Input/index.tsx","pages/ContainerForm/index.tsx","pages/ContainerList/index.tsx","pages/GrupoCaixasForm/index.tsx","pages/GrupoCaixasList/index.tsx","routes.tsx","App.tsx","index.tsx"],"names":["Landing","id","className","to","PageHeader","props","title","description","children","ContainerItem","container","_id","comprimentoX","alturaY","larguraZ","GrupoCaixasItem","grupoCaixas","quantidadeCaixas","api","axios","create","baseURL","Alocar","history","useHistory","useState","containers","setContainers","gruposCaixas","setGruposCaixas","selectedGruposCaixas","setSelectedGruposCaixas","selectedContainer","setSelectedContainer","error","setError","formSubmitEvent","a","preventDefault","idContainerSelecionado","idsGruposCaixasSelecionados","Object","keys","forEach","key","push","length","post","containerId","gruposCaixasIds","response","respostaAlocacao","data","get","handleCheckboxChange","event","grupoCaixasId","target","value","checked","handleRadioChange","useEffect","searchContainers","searchGruposCaixas","onSubmit","map","Radio","name","onChange","containerListItem","grupoCaixa","Checkbox","type","CaixaItem","caixa","idGrupoCaixas","volume","posicao","x","y","z","AlocarResultado","resultadoAlocacao","useLocation","state","volumeAlocado","caixasAlocadas","Input","label","rest","htmlFor","ContainerForm","comprimento","setComprimento","altura","setAltura","largura","setLargura","e","then","alert","catch","ContainerList","GrupoCaixasForm","setQuantidadeCaixas","_","GrupoCaixasList","searchCaixas","Routes","basename","path","exact","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ffffcf43.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom'\n\nimport './styles.css'\n\nfunction Landing() {\n\n    return (\n        <div id=\"page-landing\">\n            <div id=\"page-landing-content\" className=\"container\">\n                <div className=\"logo-container\">\n                    {/* <img src={} alt=\"\"/> */}\n                    <h2>Alocador de cargas</h2>\n                </div>\n\n                <div className=\"buttons-container\">\n                    <div className=\"botao-alocar-container\">\n                        <Link to=\"/alocar\" className=\"alocar\">\n                            {/* <img src={} alt=\"\"/> */}\n                            Alocar em container\n                        </Link>\n                    </div>\n                    <div className=\"botoes-crud-container\">\n                        <div>\n                            <Link to=\"/container/criar\" className=\"criar\">\n                                {/* <img src={} alt=\"\"/> */}\n                                Criar Container\n                            </Link>\n                            <Link to=\"/container/listar/\" className=\"listar\">\n                                {/* <img src={} alt=\"\"/> */}\n                                Listar containers\n                            </Link>\n                        </div>\n                        <div>\n                            <Link to=\"/grupocaixas/criar\" className=\"criar\">\n                                {/* <img src={} alt=\"\"/> */}\n                                Criar Grupo de Caixas\n                            </Link>\n                            <Link to=\"/grupocaixas/listar/\" className=\"listar\">\n                                {/* <img src={} alt=\"\"/> */}\n                                Listar grupos de caixas\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Landing;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './styles.css'\n\n\ninterface PageHeaderProps {\n    title: string;\n    description?: string;\n}\n\n\nconst PageHeader: React.FC<PageHeaderProps> = (props) => {\n    return (\n        <header className=\"page-header\">\n            <div className=\"top-bar-container\">\n                <Link to=\"/\">\n                    <i className=\"fas fa-arrow-left\"></i>\n                </Link>\n            </div>\n            <div className=\"header-content\">\n                <strong>{props.title}</strong>\n                { props.description &&  <p>{props.description}</p> }\n                \n                {props.children}\n            </div>\n        </header>\n    );\n}\n\nexport default PageHeader;","import React from 'react';\nimport './styles.css'\n\n\nexport interface Container {\n    _id: number;\n    comprimentoX: number;\n    alturaY: number;\n    larguraZ: number;\n}\n\nexport interface ContainerItemProps {\n    container: Container;\n}\n\n\nconst ContainerItem: React.FC<ContainerItemProps> = ({ container }) => {\n    return (\n        <article className=\"container-item\">\n            <header>\n                <div>\n                    <strong>Container {container._id}</strong>\n                </div>\n            </header>\n            \n            <p>Comprimento: {container.comprimentoX} cm</p>\n            <p>Altura: {container.alturaY} cm</p>\n            <p>Largura: {container.larguraZ} cm</p>\n            \n            <footer>\n            </footer>\n        </article>\n    )\n}\n\nexport default ContainerItem;","import React from 'react';\nimport './styles.css'\n\n\nexport interface GrupoCaixas {\n    _id: number;\n    comprimentoX: number;\n    alturaY: number;\n    larguraZ: number;\n    quantidadeCaixas: number;\n}\n\ninterface GrupoCaixasItemProps {\n    grupoCaixas: GrupoCaixas;\n}\n\n\nconst GrupoCaixasItem: React.FC<GrupoCaixasItemProps> = ({ grupoCaixas }) => {\n    return (\n        <article className=\"grupo-caixas-item\">\n            <header>\n                <div>\n                    <strong>Grupo de caixas {grupoCaixas._id}</strong>\n                </div>\n            </header>\n            \n            <p>Comprimento: {grupoCaixas.comprimentoX} cm</p>\n            <p>Altura: {grupoCaixas.alturaY} cm</p>\n            <p>Largura: {grupoCaixas.larguraZ} cm</p>\n            <p>Quantidade: {grupoCaixas.quantidadeCaixas} cm</p>\n            \n            <footer>\n            </footer>\n        </article>\n    )\n}\n\nexport default GrupoCaixasItem;","import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: 'https://alocador-server.herokuapp.com'\n})\n\nexport default api;","import React, { useState, FormEvent, useEffect } from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport PageHeader from '../../components/PageHeader';\nimport ContainerItem, { Container } from '../../components/ContainerItem';\nimport { Radio } from '@material-ui/core';\nimport GrupoCaixasItem, { GrupoCaixas } from '../../components/GrupoCaixasItem';\nimport { useHistory } from 'react-router-dom';\nimport api from '../../services/api';\nimport './styles.css'\n\nfunction Alocar() {\n    const history = useHistory();\n    \n    const [containers, setContainers] = useState([]);\n    const [gruposCaixas, setGruposCaixas] = useState([]);\n\n    const [selectedGruposCaixas, setSelectedGruposCaixas] = useState({});\n    const [selectedContainer, setSelectedContainer] = useState('');\n\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        searchContainers();\n        searchGruposCaixas();\n    }, [])\n\n    async function handleFormSubmit(formSubmitEvent: FormEvent) {\n        formSubmitEvent.preventDefault();\n        let idContainerSelecionado = selectedContainer;\n        let idsGruposCaixasSelecionados: any[] = [];\n\n        Object.keys(selectedGruposCaixas).forEach((key) => {\n            idsGruposCaixasSelecionados.push(key);\n        });\n\n        if (idContainerSelecionado?.length > 0 && idsGruposCaixasSelecionados?.length > 0) {\n            const response = await api.post('alocar', {\n                containerId: idContainerSelecionado,\n                gruposCaixasIds: idsGruposCaixasSelecionados\n            });\n            history.push('/resultado/alocacao', { respostaAlocacao: response.data });\n        } else setError(\"É necessário escolher ao menos um container e uma caixa.\");\n    }\n\n    async function searchContainers() {\n        const response = await api.get('containers');\n        setContainers(response.data);\n    }\n\n    async function searchGruposCaixas() {\n        const response = await api.get('gruposCaixas');\n        setGruposCaixas(response.data);\n    }\n\n    function handleCheckboxChange(event: any) {\n        let grupoCaixasId = event.target.value;\n        setSelectedGruposCaixas({ ...selectedGruposCaixas, [grupoCaixasId]: event.target.checked });\n    }\n\n    function handleRadioChange(event: any) {\n        let containerId = event.target.value;\n        setSelectedContainer(containerId);\n    }\n\n    const containerListItem = (container: any) => (\n        <div key={container._id} className=\"list-item\">\n            <Radio\n                checked={selectedContainer === container._id}\n                value={container._id}\n                name=\"radio-button\"\n                onChange={handleRadioChange}\n            />\n            <ContainerItem container={container} />\n        </div>\n    )\n\n    const gruposCaixasListItem = (grupoCaixas: any) => (\n        <div key={grupoCaixas._id} className=\"list-item\">\n            <Checkbox\n                value={grupoCaixas._id}\n                name=\"checkbox-button\"\n                onChange={handleCheckboxChange}\n            />\n            <GrupoCaixasItem grupoCaixas={grupoCaixas} />\n        </div>\n    )\n\n    return (\n        <div id=\"page-container-list\" className=\"container\">\n            <PageHeader title=\"Escolha abaixo 1 Container e os Grupos de Caixas para alocar\">\n            </PageHeader>\n\n            <main>\n                <form id=\"componentes-alocacao\" onSubmit={handleFormSubmit}>\n                    <strong>Containers:</strong>\n                    <fieldset className=\"containers-fieldset\">\n                        {containers?.length > 0 ? containers.map((container: Container) => {\n                            return containerListItem(container)\n                        }) \n                        : <p>Não há Containers para serem exibidos</p>}\n                    </fieldset>\n                    <strong>Caixas:</strong>\n                    <fieldset className=\"grupos-caixas-fieldset\">\n                        {gruposCaixas?.length > 0 ? gruposCaixas.map((grupoCaixa: GrupoCaixas) => {\n                            return gruposCaixasListItem(grupoCaixa)\n                        }) \n                        : <p>Não há Grupos de Caixas para serem exibidos</p>}\n                    </fieldset>\n\n                    <footer>\n                        {error ?? <p>{error}</p>}\n                        <button type=\"submit\">\n                            Alocar grupos de caixas no container\n                        </button>\n                    </footer>\n                </form>\n            </main>\n        </div>\n    )\n}\n\nexport default Alocar;","import React from 'react';\nimport './styles.css'\n\nexport interface Caixa {\n    id: number;\n    volume: number;\n    idGrupoCaixas: string;\n    itemMatriz: ItemMatriz;\n    posicao: ItemMatriz;\n}\n\ninterface ItemMatriz {\n    x: number,\n    y: number,\n    z: number\n}\n\ninterface CaixaItemProps {\n    caixa: Caixa;\n}\n\nconst CaixaItem: React.FC<CaixaItemProps> = ({ caixa }) => {\n    return (\n        <article className=\"caixa-item\">\n            <header>\n                <div>\n                    <strong>Caixa {caixa.id+1} do grupo de caixas {caixa.idGrupoCaixas}</strong>\n                </div>\n            </header>\n            <p>Volume: {caixa.volume} cm³</p>\n\n            <p>Posição: [x: {caixa.posicao.x} | y: {caixa.posicao.y} | z: {caixa.posicao.z} ]</p>\n            <footer>\n            </footer>\n        </article>\n    )\n}\n\nexport default CaixaItem;","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport CaixaItem, { Caixa } from '../../components/CaixaItem';\nimport PageHeader from '../../components/PageHeader';\nimport './styles.css'\n\n\ninterface stateType {\n    respostaAlocacao: any;\n }\n \n\nfunction AlocarResultado() {\n    const { state } = useLocation<stateType>();\n    let resultadoAlocacao = state.respostaAlocacao;\n    \n    return (\n            <div id=\"page-resultado-alocacao\" className=\"alocacao\">\n                <PageHeader title=\"Resultado da alocação\"> </PageHeader>\n                <main>                    \n                    {resultadoAlocacao?.volumeAlocado > 0 ? <p>Volume Alocado: {resultadoAlocacao.volumeAlocado} cm³</p> : <p>Não foi possível alocar nenhuma caixa.</p>}\n                    \n                    {resultadoAlocacao.caixasAlocadas.map((caixa: Caixa) => {\n                        return <CaixaItem key={`${caixa.id}->${caixa.idGrupoCaixas}`} caixa={caixa} />\n                    })}\n                </main>\n            </div>\n    )\n}\n\nexport default AlocarResultado;","import React, { InputHTMLAttributes } from 'react';\nimport './styles.css'\n\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n    name: string;\n    label: string;\n}\n\n\nconst Input: React.FC<InputProps> = ({ label, name, ...rest }) => {\n    return (\n        <div className=\"input-block\">\n            <label htmlFor={name}>{label}</label>\n            <input type=\"text\" id={name} {...rest} />\n        </div>\n    );\n}\n\nexport default Input;","import React, { useState, FormEvent } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PageHeader from '../../components/PageHeader';\nimport Input from '../../components/Input';\nimport api from '../../services/api';\nimport './styles.css'\n\n\nfunction ContainerForm() {\n    const history = useHistory();\n\n    const [comprimento, setComprimento] = useState('');\n    const [altura, setAltura] = useState('');\n    const [largura, setLargura] = useState('');\n\n    function handleCreateContainer(e: FormEvent) {\n        e.preventDefault();\n\n        api.post('containers', {\n            comprimento,\n            altura,\n            largura\n        }).then(() => {\n            alert('Cadastro realizado com sucesso!');\n            history.push('/');\n        }).catch((e) => {   \n            alert('Erro no cadastro!');\n        });\n    }\n\n    return (\n        <div id=\"page-container-form\" className=\"container\">\n            <PageHeader \n                title={`Criar Container`}\n            />\n            \n            <main>\n                <form onSubmit={handleCreateContainer}>\n                    <fieldset>\n                        <legend>Preencha os dados do container</legend>\n                        <Input \n                            name=\"comprimento\" \n                            label=\"Comprimento (cm)\"\n                            value={comprimento} \n                            onChange={(e) => { setComprimento(e.target.value) }} \n                        />\n                        <Input \n                            name=\"altura\" \n                            label=\"Altura (cm)\"\n                            value={altura} \n                            onChange={(e) => { setAltura(e.target.value) }} \n                        />\n                        <Input \n                            name=\"largura\" \n                            label=\"Largura (cm)\"\n                            value={largura} \n                            onChange={(e) => { setLargura(e.target.value) }} \n                        />\n                    </fieldset>\n\n                    <footer>\n                        <button type=\"submit\">\n                            Salvar cadastro\n                        </button>\n                    </footer>\n                </form>\n            </main>\n        </div>\n    )\n}\n\nexport default ContainerForm;","import React, { useState, FormEvent, useEffect } from 'react';\nimport PageHeader from '../../components/PageHeader';\nimport ContainerItem, { Container } from '../../components/ContainerItem';\nimport api from '../../services/api';\nimport './styles.css'\n\n\nfunction ContainerList() {\n    const [containers, setContainers] = useState([]);\n\n    useEffect(() => {\n        searchContainers();\n    }, [])\n\n    async function searchContainers(e?: FormEvent) {\n        e?.preventDefault();\n        const response = await api.get('containers');\n        setContainers(response.data);\n    }\n\n    return (\n        <div id=\"page-container-list\" className=\"container\">\n            <PageHeader title=\"Lista de Containers disponíveis\">\n                <form id=\"search-containers\" onSubmit={searchContainers}>\n                    {/* <button type=\"submit\">\n                        Recarregar dados\n                    </button> */}\n                </form>\n            </PageHeader>\n\n            <main>\n                {containers?.length > 0 ? containers.map((container: Container) => {\n                    return <ContainerItem key={container._id} container={container} />\n                }) \n                : <p>Não há Containers para serem exibidos.</p>}\n            </main>\n        </div>\n    )\n}\n\nexport default ContainerList;","import React, { useState, FormEvent } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PageHeader from '../../components/PageHeader';\nimport Input from '../../components/Input';\nimport api from '../../services/api';\nimport './styles.css'\n\n\nfunction GrupoCaixasForm() {\n    const history = useHistory();\n\n    const [comprimento, setComprimento] = useState('');\n    const [altura, setAltura] = useState('');\n    const [largura, setLargura] = useState('');\n    const [quantidadeCaixas, setQuantidadeCaixas] = useState('');\n\n    function handleCreateGrupoCaixas(e: FormEvent) {\n        e.preventDefault();\n\n        api.post('gruposCaixas', {\n            comprimento,\n            altura,\n            largura,\n            quantidadeCaixas,\n        }).then(() => {\n            alert('Cadastro realizado com sucesso!');\n\n            history.push('/');\n        }).catch((_) => {   \n            alert('Erro no cadastro!');\n        });\n    }\n\n    return (\n        <div id=\"page-grupo-caixas-form\" className=\"grupo-caixas\">\n            <PageHeader \n                title={`Criar Grupo de Caixas`}\n            />\n            \n            <main>\n                <form onSubmit={handleCreateGrupoCaixas}>\n                    <fieldset>\n                        <legend>Preencha os dados do Grupo de Caixas</legend>\n                        <Input \n                            name=\"comprimento\" \n                            label=\"Comprimento (cm)\"\n                            value={comprimento} \n                            onChange={(e) => { setComprimento(e.target.value) }} \n                        />\n                        <Input \n                            name=\"altura\" \n                            label=\"Altura (cm)\"\n                            value={altura} \n                            onChange={(e) => { setAltura(e.target.value) }} \n                        />\n                        <Input \n                            name=\"largura\" \n                            label=\"Largura (cm)\"\n                            value={largura} \n                            onChange={(e) => { setLargura(e.target.value) }} \n                        />\n                        <Input \n                            name=\"quantidadeCaixas\" \n                            label=\"Quantidade de caixas (cm)\"\n                            value={quantidadeCaixas} \n                            onChange={(e) => { setQuantidadeCaixas(e.target.value) }} \n                        />\n                    </fieldset>\n\n                    <footer>\n                        <button type=\"submit\">\n                            Salvar cadastro\n                        </button>\n                    </footer>\n                </form>\n            </main>\n        </div>\n    )\n}\n\nexport default GrupoCaixasForm;","import React, { useState, FormEvent, useEffect } from 'react';\nimport PageHeader from '../../components/PageHeader';\nimport GrupoCaixasItem, { GrupoCaixas } from '../../components/GrupoCaixasItem';\nimport api from '../../services/api';\nimport './styles.css'\n\nfunction GrupoCaixasList() {\n    const [gruposCaixas, setGruposCaixas] = useState([]);\n\n    useEffect(() => {\n        searchCaixas();\n    }, [])\n\n    async function searchCaixas(e?: FormEvent) {\n        e?.preventDefault();\n        const response = await api.get('gruposCaixas');\n        setGruposCaixas(response.data);\n    }\n\n    return (\n        <div id=\"page-container-list\" className=\"container\">\n            <PageHeader title=\"Lista de Grupos de Caixas disponíveis\">\n                <form id=\"search-grupos-caixas\" onSubmit={searchCaixas}>\n                    {/* <button type=\"submit\">\n                        Recarregar dados\n                    </button> */}\n                </form>\n            </PageHeader>\n\n            <main>\n                {gruposCaixas?.length > 0 ? gruposCaixas.map((grupoCaixas: GrupoCaixas) => {\n                    return <GrupoCaixasItem key={grupoCaixas._id} grupoCaixas={grupoCaixas} />\n                })\n                : <p>Não há Grupos de Caixas para serem exibidos.</p>}\n            </main>\n        </div>\n    )\n}\n\nexport default GrupoCaixasList;","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom'\n\nimport Landing from './pages/Landing';\nimport Alocar from './pages/Alocar';\nimport AlocarResultado from './pages/AlocarResultado';\nimport ContainerForm from './pages/ContainerForm';\nimport ContainerList from './pages/ContainerList';\nimport GrupoCaixasForm from './pages/GrupoCaixasForm';\nimport GrupoCaixasList from './pages/GrupoCaixasList';\n\nfunction Routes() {\n    return (\n        <BrowserRouter basename=\"/alocador-front\">\n            <Route path=\"/\" exact component={Landing} />\n            <Route path=\"/alocar\" component={Alocar} />\n            <Route path=\"/resultado/alocacao\" component={AlocarResultado} />\n            <Route path=\"/container/criar\" component={ContainerForm} />\n            <Route path=\"/container/listar\" component={ContainerList} />\n            <Route path=\"/grupocaixas/criar\" component={GrupoCaixasForm} />\n            <Route path=\"/grupocaixas/listar/\" component={GrupoCaixasList} />\n        </BrowserRouter>\n    )\n}\n\nexport default Routes;","import React from 'react';\n\nimport './assets/styles/global.css';\nimport Routes from './routes';\n\nfunction App() {\n  return (\n    <Routes />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}